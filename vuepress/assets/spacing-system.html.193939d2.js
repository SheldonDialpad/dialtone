import{_ as t,r as n,o as r,c as l,b as a,F as c,d as i,a as s,e as o}from"./app.2fe104ab.js";var d="/assets/images/spacing-example.png";const h={},p=i('<h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h2><p>Dialtone uses a spacing system based on a 4-pixel system, providing half-steps where deemed necessary. This 4px unit forms the base measurement unit for spacing in Dialtone.</p><div class="d-ta-center"><img src="'+d+'" alt="A layout example with spacing values to show how the spacing system is used." class="d-w80p"></div><h3 id="css-variables" tabindex="-1"><a class="header-anchor" href="#css-variables" aria-hidden="true">#</a> CSS Variables</h3>',4),g=s("h3",{id:"less-variables",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#less-variables","aria-hidden":"true"},"#"),o(" Less Variables")],-1),m=i('<h2 id="utility-classes" tabindex="-1"><a class="header-anchor" href="#utility-classes" aria-hidden="true">#</a> Utility Classes</h2><p>Aside from the spacing variables, it may be necessary to use the following utility classes to manage interface spacing:</p><ul><li><a href="/utilities/spacing/auto-spacing">Auto Spacing</a></li><li><a href="/utilities/typography/line-height">Line Height</a></li><li><a href="/utilities/spacing/margin">Margin</a></li><li><a href="/utilities/spacing/padding">Padding</a></li></ul>',3);function u(_,f){const e=n("spacing-system-table");return r(),l(c,null,[p,a(e,{kind:"css"}),g,a(e,{kind:"less"}),m],64)}var b=t(h,[["render",u]]);export{b as default};
